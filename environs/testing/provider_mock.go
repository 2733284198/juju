// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/environs (interfaces: ProviderCredentials)

// Package testing is a generated GoMock package.
package testing

import (
	gomock "github.com/golang/mock/gomock"
	cloud "github.com/juju/juju/cloud"
	environs "github.com/juju/juju/environs"
	reflect "reflect"
)

// MockProviderCredentials is a mock of ProviderCredentials interface
type MockProviderCredentials struct {
	ctrl     *gomock.Controller
	recorder *MockProviderCredentialsMockRecorder
}

// MockProviderCredentialsMockRecorder is the mock recorder for MockProviderCredentials
type MockProviderCredentialsMockRecorder struct {
	mock *MockProviderCredentials
}

// NewMockProviderCredentials creates a new mock instance
func NewMockProviderCredentials(ctrl *gomock.Controller) *MockProviderCredentials {
	mock := &MockProviderCredentials{ctrl: ctrl}
	mock.recorder = &MockProviderCredentialsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProviderCredentials) EXPECT() *MockProviderCredentialsMockRecorder {
	return m.recorder
}

// CredentialSchemas mocks base method
func (m *MockProviderCredentials) CredentialSchemas() map[cloud.AuthType]cloud.CredentialSchema {
	ret := m.ctrl.Call(m, "CredentialSchemas")
	ret0, _ := ret[0].(map[cloud.AuthType]cloud.CredentialSchema)
	return ret0
}

// CredentialSchemas indicates an expected call of CredentialSchemas
func (mr *MockProviderCredentialsMockRecorder) CredentialSchemas() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CredentialSchemas", reflect.TypeOf((*MockProviderCredentials)(nil).CredentialSchemas))
}

// DetectCredentials mocks base method
func (m *MockProviderCredentials) DetectCredentials() (*cloud.CloudCredential, error) {
	ret := m.ctrl.Call(m, "DetectCredentials")
	ret0, _ := ret[0].(*cloud.CloudCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetectCredentials indicates an expected call of DetectCredentials
func (mr *MockProviderCredentialsMockRecorder) DetectCredentials() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectCredentials", reflect.TypeOf((*MockProviderCredentials)(nil).DetectCredentials))
}

// FinalizeCredential mocks base method
func (m *MockProviderCredentials) FinalizeCredential(arg0 environs.FinalizeCredentialContext, arg1 environs.FinalizeCredentialParams) (*cloud.Credential, error) {
	ret := m.ctrl.Call(m, "FinalizeCredential", arg0, arg1)
	ret0, _ := ret[0].(*cloud.Credential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FinalizeCredential indicates an expected call of FinalizeCredential
func (mr *MockProviderCredentialsMockRecorder) FinalizeCredential(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FinalizeCredential", reflect.TypeOf((*MockProviderCredentials)(nil).FinalizeCredential), arg0, arg1)
}
