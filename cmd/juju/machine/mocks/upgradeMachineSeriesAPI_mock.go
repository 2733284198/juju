// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/machine (interfaces: UpgradeMachineSeriesAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUpgradeMachineSeriesAPI is a mock of UpgradeMachineSeriesAPI interface
type MockUpgradeMachineSeriesAPI struct {
	ctrl     *gomock.Controller
	recorder *MockUpgradeMachineSeriesAPIMockRecorder
}

// MockUpgradeMachineSeriesAPIMockRecorder is the mock recorder for MockUpgradeMachineSeriesAPI
type MockUpgradeMachineSeriesAPIMockRecorder struct {
	mock *MockUpgradeMachineSeriesAPI
}

// NewMockUpgradeMachineSeriesAPI creates a new mock instance
func NewMockUpgradeMachineSeriesAPI(ctrl *gomock.Controller) *MockUpgradeMachineSeriesAPI {
	mock := &MockUpgradeMachineSeriesAPI{ctrl: ctrl}
	mock.recorder = &MockUpgradeMachineSeriesAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUpgradeMachineSeriesAPI) EXPECT() *MockUpgradeMachineSeriesAPIMockRecorder {
	return m.recorder
}

// BestAPIVersion mocks base method
func (m *MockUpgradeMachineSeriesAPI) BestAPIVersion() int {
	ret := m.ctrl.Call(m, "BestAPIVersion")
	ret0, _ := ret[0].(int)
	return ret0
}

// BestAPIVersion indicates an expected call of BestAPIVersion
func (mr *MockUpgradeMachineSeriesAPIMockRecorder) BestAPIVersion() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BestAPIVersion", reflect.TypeOf((*MockUpgradeMachineSeriesAPI)(nil).BestAPIVersion))
}

// Close mocks base method
func (m *MockUpgradeMachineSeriesAPI) Close() error {
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockUpgradeMachineSeriesAPIMockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockUpgradeMachineSeriesAPI)(nil).Close))
}

// UpgradeSeriesComplete mocks base method
func (m *MockUpgradeMachineSeriesAPI) UpgradeSeriesComplete(arg0 string) error {
	ret := m.ctrl.Call(m, "UpgradeSeriesComplete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpgradeSeriesComplete indicates an expected call of UpgradeSeriesComplete
func (mr *MockUpgradeMachineSeriesAPIMockRecorder) UpgradeSeriesComplete(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeSeriesComplete", reflect.TypeOf((*MockUpgradeMachineSeriesAPI)(nil).UpgradeSeriesComplete), arg0)
}

// UpgradeSeriesPrepare mocks base method
func (m *MockUpgradeMachineSeriesAPI) UpgradeSeriesPrepare(arg0, arg1 string, arg2 bool) error {
	ret := m.ctrl.Call(m, "UpgradeSeriesPrepare", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpgradeSeriesPrepare indicates an expected call of UpgradeSeriesPrepare
func (mr *MockUpgradeMachineSeriesAPIMockRecorder) UpgradeSeriesPrepare(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeSeriesPrepare", reflect.TypeOf((*MockUpgradeMachineSeriesAPI)(nil).UpgradeSeriesPrepare), arg0, arg1, arg2)
}
