name: "Upgrade"
on: [push, pull_request]
jobs:
  upgrade:
    name: linux-amd64
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
    - name: Install Dependencies
      shell: bash
      run: |
        set -euxo pipefail
        sudo apt-get remove lxd lxd-client
        sudo snap install snapcraft --classic
        sudo snap install lxd
        sudo lxd waitready
        sudo lxd init --auto
        sudo chmod a+wr /var/snap/lxd/common/lxd/unix.socket
        echo "##[add-path]/snap/bin"
    - name: Bootstrap Juju latest/stable
      shell: bash
      run: |
        set -euxo pipefail
        lxc network set lxdbr0 ipv6.address none
        sudo snap install juju --classic
        juju bootstrap localhost test
        juju status
        juju version
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build snap
      shell: bash
      run: |
        set -euxo pipefail
        snapcraft --use-lxd
    - name: Install snap
      shell: bash
      run: |
        set -euxo pipefail
        sudo snap install *.snap --dangerous --classic
    - name: Preflight
      shell: bash
      run: |
        set -euxo pipefail
        juju status
        juju version
    - name: Test upgrade controller
      shell: bash
      run: |
        set -euxo pipefail
        CURRENT=$(juju show-controller --format=json | jq -r '.test | .details | .["agent-version"]')

        juju upgrade-controller --build-agent

        attempt=0
        while true; do
          UPDATED=$(juju show-controller --format=json | jq -r '.test | .details | .["agent-version"]')
          if [ "$CURRENT" != "$UPDATED" ]; then
              break
          fi
          sleep 10
          attempt=$((attempt+1))
          if [ "$attempt" -eq 48 ]; then
              echo "Upgrade controller timed out"
              exit 1
          fi
        done

        PANIC=$(juju debug-log --replay --no-tail -m controller | grep "panic" || true)
        if [ "$PANIC" != "" ]; then
            echo "Panic found:"
            juju debug-log --replay --no-tail -m controller
            exit 1
        fi
    - name: Test upgrade model
      shell: bash
      run: |
        set -euxo pipefail
        CURRENT=$(juju show-model default --format=json | jq -r '.default | .["agent-version"]')

        VERSION=$(juju version | cut -d "-" -f 1,2 | xargs -I% echo "%.1")
        juju upgrade-model --agent-version="$VERSION"

        attempt=0
        while true; do
          UPDATED=$(juju show-model default --format=json | jq -r '.default | .["agent-version"]')
          if [ "$CURRENT" != "$UPDATED" ]; then
              break
          fi
          sleep 10
          attempt=$((attempt+1))
          if [ "$attempt" -eq 48 ]; then
              echo "Upgrade model timed out"
              exit 1
          fi
        done

        PANIC=$(juju debug-log --replay --no-tail | grep "panic" || true)
        if [ "$PANIC" != "" ]; then
            echo "Panic found:"
            juju debug-log --replay --no-tail
            exit 1
        fi