name: "Upgrade"
on: [push, pull_request]
jobs:
  upgrade:
    name: linux-amd64
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
    - name: Install Dependencies
      shell: bash
      run: |
        set -euxo pipefail
        sudo apt-get remove lxd lxd-client
        sudo snap install snapcraft --classic
        sudo snap install lxd
        sudo lxd waitready
        sudo lxd init --auto
        sudo chmod a+wr /var/snap/lxd/common/lxd/unix.socket
        echo "##[add-path]/snap/bin"
    - name: Bootstrap Juju latest/stable
      shell: bash
      run: |
        set -euxo pipefail
        lxc network set lxdbr0 ipv6.address none
        sudo snap install juju --classic
        juju bootstrap localhost
        juju status
        juju version
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build snap
      shell: bash
      run: |
        set -euxo pipefail
        snapcraft --use-lxd
    - name: Install snap
      shell: bash
      run: |
        set -euxo pipefail
        sudo snap install *.snap --dangerous --classic
    - name: Preflight
      shell: bash
      run: |
        set -euxo pipefail
        juju status
        juju version
    - name: Test upgrade
      shell: bash
      run: |
        set -euxo pipefail
        CURRENT=$(juju status --format=json 2>/dev/null | jq -r ".model | .version")

        juju upgrade-controller --build-agent

        UPDATED=$(juju status --format=json 2>/dev/null | jq -r ".model | .version")
        if [ "$CURRENT" == "$UPDATED" ]; then
            echo "Upgrade failure"
            exit 1
        fi

        PANIC=$(juju debug-log --replay --no-tail -m controller | grep "panic" | wc -m)
        if [ "$PANIC" -ne 0 ]; then
            echo "Panic found:"
            juju debug-log --replay --no-tail -m controller
            exit 1
        fi
